#include<stdio.h>
#include<limits.h>

int check( int page , int queue[] , int n )
{
    for( int i = 0 ; i < n ; i++)
    {
        if( page == queue[i] )
            return 1 ;
    }
    return 0;
}
void printqueue( int queue[] , int n )
{
    for( int i = 0 ; i < n ; i++)
    {
        printf("%d\t",queue[i]);
    }
    printf("\n");
}
int main()
{
    int n , frame , s  ;
    printf("Enter the number of pages\n");
    scanf("%d",&n);
    int pages[n];
    printf("Enter reference string\n");
    for( int i = 0 ; i < n ; i++)
    {
        scanf("%d",&pages[i]);
    }
    printf("Enter the number of frames :\n");
    scanf("%d",&frame);
    int queue[frame] ;
    int distance[frame] ;
    for( int i = 0 ; i < frame ; i++)
    {
        queue[i] = -1 ;
    }
    int pagefault = 0 , occupied = 0 ;
    for( int i = 0 ; i < n ; i++)
    {
        if( check( pages[i] , queue , frame ) )
            printqueue( queue , frame );
    
        else if ( pagefault < frame )
        {
            queue[pagefault] = pages[i] ;
            pagefault++ ;
            printqueue( queue , frame );
        }
        else
        {
            int max = INT_MIN ;
            int index = 0 ;
            for( int j = 0 ; j < frame ; j++)
            {
                distance[j] = 0 ;
                for( int k =  i-1 ; k >= 0 ; k--)
                {
                    distance[j]++;
                    if( queue[j] == pages[k])
                        break ;
                }
                if( distance[j] > max )
                {
                    max = distance[j];
                    index =  j ;
                }
            }
            queue[index] = pages[i] ;
            printqueue( queue , frame );
            pagefault++;
            
        }
        
    }
     printf("Total number of pagefaults : %d\n",pagefault);
    printf("Total number of page hits : %d\n",n-pagefault);
    
}
